name: CI

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Detect requirements
        id: detect
        shell: bash
        run: |
          set -e
          REQS=""
          if [ -f sample_app/requirements.txt ]; then
            REQS="sample_app/requirements.txt"
          else
            REQS=$(ls -1 **/requirements.txt 2>/dev/null | head -n1 || true)
          fi
          echo "reqs=$REQS" >> "$GITHUB_OUTPUT"

      - name: Install deps
        if: ${{ steps.detect.outputs.reqs != '' }}
        run: |
          python -m pip install --upgrade pip
          pip install -r "${{ steps.detect.outputs.reqs }}"
          pip install ruff pytest pytest-cov

      - name: Install minimal tools if no reqs
        if: ${{ steps.detect.outputs.reqs == '' }}
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest

      - name: Lint
        run: ruff check . || true

      - name: Run tests (if present)
        run: |
          if [ -d sample_app/tests ] || [ -d tests ]; then
            pytest -q --maxfail=1 --disable-warnings --junitxml=pytest-report.xml
          else
            echo "No tests present; skipping."
          fi

      - name: Upload JUnit
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: pytest-report.xml
          if-no-files-found: ignore
